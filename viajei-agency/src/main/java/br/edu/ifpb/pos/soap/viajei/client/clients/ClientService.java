
package br.edu.ifpb.pos.soap.viajei.client.clients;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ClientService", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ClientService {


    /**
     * 
     * @param clientId
     * @return
     *     returns br.edu.ifpb.pos.soap.viajei.client.clients.Client
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findById", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.FindByIdResponse")
    public Client findById(
        @WebParam(name = "clientId", targetNamespace = "")
        Long clientId);

    /**
     * 
     * @param clientCpf
     * @return
     *     returns br.edu.ifpb.pos.soap.viajei.client.clients.Client
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByCpf", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.FindByCpf")
    @ResponseWrapper(localName = "findByCpfResponse", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.FindByCpfResponse")
    public Client findByCpf(
        @WebParam(name = "clientCpf", targetNamespace = "")
        String clientCpf);

    /**
     * 
     * @return
     *     returns java.util.List<br.edu.ifpb.pos.soap.viajei.client.clients.Client>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listAll", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.ListAll")
    @ResponseWrapper(localName = "listAllResponse", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.ListAllResponse")
    public List<Client> listAll();

    /**
     * 
     * @param client
     */
    @WebMethod
    @RequestWrapper(localName = "add", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.AddResponse")
    public void add(
        @WebParam(name = "client", targetNamespace = "")
        Client client);

    /**
     * 
     * @param clientId
     */
    @WebMethod
    @RequestWrapper(localName = "remove", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.Remove")
    @ResponseWrapper(localName = "removeResponse", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.RemoveResponse")
    public void remove(
        @WebParam(name = "clientId", targetNamespace = "")
        Long clientId);

    /**
     * 
     * @param updatedClient
     */
    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://ws.client.viajei.soap.pos.ifpb.edu.br/", className = "br.edu.ifpb.pos.soap.viajei.client.clients.UpdateResponse")
    public void update(
        @WebParam(name = "updatedClient", targetNamespace = "")
        Client updatedClient);

}
